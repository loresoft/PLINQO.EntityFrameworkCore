<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>

<%@ Assembly Src="Model.cs" %>
<%@ Assembly Src="Extensions.cs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>

<%@ Import Namespace="SchemaMapper" %>

<%@ Property Name="Entity" Type="SchemaMapper.Entity"  %>
<%@ Property Name="ContextNamespace" Type="System.String"  %>
<%@ Property Name="EntityNamespace" Type="System.String"  %>
<%@ Property Name="MappingNamespace" Type="System.String"  %>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Text;
<% if(MappingNamespace != EntityNamespace) { %>
using <%= EntityNamespace %>;
<% }  %>

namespace <%= MappingNamespace %>
{
    public partial class <%= Entity.MappingName.ToSafeName() %>
    {
        partial void InitializeMapping(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<<%= EntityNamespace %>.<%= Entity.ClassName.ToSafeName() %>> builder)
        {
            // add mapping overrides here
        }
    }
}
