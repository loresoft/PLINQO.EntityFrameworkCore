<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>

<%@ Assembly Src="Model.cs" %>
<%@ Assembly Src="Extensions.cs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>

<%@ Import Namespace="SchemaMapper" %>

<%@ Property Name="EntityContext" Type="SchemaMapper.EntityContext"  %>

<%@ Property Name="ContextNamespace" Type="System.String"  %>
<%@ Property Name="ContextBaseClass" Type="System.String" Default="DbContext" Optional="True"  %>
<%@ Property Name="EntityNamespace" Type="System.String"  %>
<%@ Property Name="MappingNamespace" Type="System.String"  %>

//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace <%= ContextNamespace %>
{
    public partial class <%= EntityContext.ClassName.ToSafeName() %>
        : <%= ContextBaseClass %>
    {
        public <%= EntityContext.ClassName.ToSafeName() %>(DbContextOptions options) : base(options)
        {
        }

<% foreach(var p in EntityContext.Entities) { %>
        public DbSet<<%= EntityNamespace %>.<%= p.ClassName.ToSafeName() %>> <%= p.ContextName.ToSafeName() %> { get; set; }
<% } // foreach %>

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
<% foreach(var p in EntityContext.Entities) { %>
            modelBuilder.ApplyConfiguration(new <%= MappingNamespace %>.<%= p.MappingName.ToSafeName() %>());
<% } // foreach %>

            InitializeMapping(modelBuilder);
        }

        partial void InitializeMapping(ModelBuilder modelBuilder);
    }
}