//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Tracker.Data
{
    public partial class TrackerContext
        : DbContext
    {
        public TrackerContext(DbContextOptions options) : base(options)
        {
        }

        public DbSet<Tracker.Data.Entities.Audit> Audits { get; set; }
        public DbSet<Tracker.Data.Entities.Task> Tasks { get; set; }
        public DbSet<Tracker.Data.Entities.User> Users { get; set; }
        public DbSet<Tracker.Data.Entities.Priority> Priorities { get; set; }
        public DbSet<Tracker.Data.Entities.Role> Roles { get; set; }
        public DbSet<Tracker.Data.Entities.Status> Status { get; set; }
        public DbSet<Tracker.Data.Entities.TaskExtended> TaskExtensions { get; set; }
        public DbSet<Tracker.Data.Entities.UserRole> UserRoles { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.ApplyConfiguration(new Tracker.Data.Mapping.AuditMap());
            modelBuilder.ApplyConfiguration(new Tracker.Data.Mapping.TaskMap());
            modelBuilder.ApplyConfiguration(new Tracker.Data.Mapping.UserMap());
            modelBuilder.ApplyConfiguration(new Tracker.Data.Mapping.PriorityMap());
            modelBuilder.ApplyConfiguration(new Tracker.Data.Mapping.RoleMap());
            modelBuilder.ApplyConfiguration(new Tracker.Data.Mapping.StatusMap());
            modelBuilder.ApplyConfiguration(new Tracker.Data.Mapping.TaskExtendedMap());
            modelBuilder.ApplyConfiguration(new Tracker.Data.Mapping.UserRoleMap());

            InitializeMapping(modelBuilder);
        }

        partial void InitializeMapping(ModelBuilder modelBuilder);
    }
}