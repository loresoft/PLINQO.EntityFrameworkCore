//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Tracker.Data.Queries
{
    public static partial class AuditExtensions
    {

        /// <summary>
        /// Gets an instance by the primary key.
        /// </summary>
        public static Tracker.Data.Entities.Audit GetByKey(this System.Linq.IQueryable<Tracker.Data.Entities.Audit> queryable, int id)
        {
            var dbSet = queryable as Microsoft.EntityFrameworkCore.DbSet<Tracker.Data.Entities.Audit>;
            if (dbSet != null)
                return dbSet.Find(id);

            return queryable.FirstOrDefault(a => a.Id == id);
        }

        public static IQueryable<Tracker.Data.Entities.Audit> ByUserId(this IQueryable<Tracker.Data.Entities.Audit> queryable, int? userId)
        {
            return queryable.Where(a => (a.UserId == userId || (userId == null && a.UserId == null)));
        }

        public static IQueryable<Tracker.Data.Entities.Audit> ByTaskId(this IQueryable<Tracker.Data.Entities.Audit> queryable, int? taskId)
        {
            return queryable.Where(a => (a.TaskId == taskId || (taskId == null && a.TaskId == null)));
        }
    }
}
