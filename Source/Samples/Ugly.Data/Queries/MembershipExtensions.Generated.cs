//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Ugly.Data.Queries
{
    public static partial class MembershipExtensions
    {

        /// <summary>
        /// Gets an instance by the primary key.
        /// </summary>
        public static Ugly.Data.Entities.Membership GetByKey(this System.Linq.IQueryable<Ugly.Data.Entities.Membership> queryable, Guid userId)
        {
            var dbSet = queryable as Microsoft.EntityFrameworkCore.DbSet<Ugly.Data.Entities.Membership>;
            if (dbSet != null)
                return dbSet.Find(userId);

            return queryable.FirstOrDefault(m => m.UserId == userId);
        }

        public static IQueryable<Ugly.Data.Entities.Membership> ByLoweredUserNamePasswordIsApprovedIsLockedOut(this IQueryable<Ugly.Data.Entities.Membership> queryable, string loweredUserName, string password, bool isApproved, bool isLockedOut)
        {
            return queryable.Where(m => m.LoweredUserName == loweredUserName
                && m.Password == password
                && m.IsApproved == isApproved
                && m.IsLockedOut == isLockedOut);
        }
    }
}
